{"version":3,"sources":["form.js"],"names":["parseURLParams","url","i","n","v","nv","queryStart","indexOf","queryEnd","length","query","slice","pairs","replace","split","parms","decodeURIComponent","hasOwnProperty","push","capitalizeFirstLetter","string","charAt","toUpperCase","$","floatingLabel","onload","$input","this","each","index","value","$current_input","val","closest","addClass","setTimeout","removeClass","keydown","change","window","addEventListener","parsley","on","fields","key","field","validationResult","$element","jQuery","call","params","location","search","undefined","name","text","console","log"],"mappings":"AAsDA,QAASA,gBAAeC,GACpB,GAIgBC,GAAGC,EAAGC,EAAGC,EAJrBC,EAAaL,EAAIM,QAAQ,KAAO,EAChCC,EAAaP,EAAIM,QAAQ,KAAO,GAAKN,EAAIQ,OAAS,EAClDC,EAAQT,EAAIU,MAAML,EAAYE,EAAW,GACzCI,EAAQF,EAAMG,QAAQ,MAAO,KAAKC,MAAM,KACxCC,IAEJ,IAAIL,IAAUT,GAAiB,KAAVS,EAArB,CAIA,IAAKR,EAAI,EAAGA,EAAIU,EAAMH,OAAQP,IAC1BG,EAAKO,EAAMV,GAAGY,MAAM,KACpBX,EAAIa,mBAAmBX,EAAG,IAC1BD,EAAIY,mBAAmBX,EAAG,IAErBU,EAAME,eAAed,KACtBY,EAAMZ,OAGVY,EAAMZ,GAAGe,KAAmB,IAAdb,EAAGI,OAAeL,EAAI,KAExC,OAAOW,IAGX,QAASI,uBAAsBC,GAC3B,MAAOA,GAAOC,OAAO,GAAGC,cAAgBF,EAAOT,MAAM,IAhFxD,YACI,SAAUY,GACP,YACA,IAAIC,EACJA,GAAgB,SAAUC,GACtB,GAAIC,EACJA,GAASH,EAAEI,MACPF,GACAF,EAAEK,KAAKL,EAAE,6DAA8D,SAAUM,EAAOC,GACpF,GAAIC,EACJA,GAAiBR,EAAEO,GACfC,EAAeC,OACfD,EAAeE,QAAQ,wBAAwBC,SAAS,sBAIpEC,WAAW,WACHT,EAAOM,MACPN,EAAOO,QAAQ,wBAAwBC,SAAS,oBAEhDR,EAAOO,QAAQ,wBAAwBG,YAAY,qBAExD,IAEPb,EAAE,6DAA6Dc,QAAQb,GACvED,EAAE,6DAA6De,OAAOd,GACtEe,OAAOC,iBAAiB,OAAQhB,GAAc,IAAO,GACrDD,EAAE,eAAekB,UAAUC,GAAG,aAAc,WACxCnB,EAAEK,KAAKD,KAAKgB,OAAQ,SAAUC,EAAKC,IACA,IAA3BA,EAAMC,kBACND,EAAME,SAASd,QAAQ,wBAAwBC,SAAS,yBAIpEX,EAAE,eAAekB,UAAUC,GAAG,kBAAmB,YACf,IAA1Bf,KAAKmB,iBACLnB,KAAKoB,SAASd,QAAQ,wBAAwBG,YAAY,qBAE1DT,KAAKoB,SAASd,QAAQ,wBAAwBC,SAAS,wBAGjEc,UACJC,KAAKtB,KAGP,IAAIuB,QAASlD,eAAeuC,OAAOY,SAASC,YAI9BC,KAAXH,YAAwCG,KAAhBH,OAAOI,OAC9B/B,EAAE,yBAAyBgC,KAAK,UAAYpC,sBAAsB+B,OAAOI,KAAK,IAAM,8BACpFE,QAAQC,IAAI,sBAAwBP,OAAOI,KAAK","file":"form.min.js","sourcesContent":["(function () {\n    (function ($) {\n        'use strict';\n        var floatingLabel;\n        floatingLabel = function (onload) {\n            var $input;\n            $input = $(this);\n            if (onload) {\n                $.each($('.bt-flabels__wrapper input, .bt-flabels__wrapper textarea'), function (index, value) {\n                    var $current_input;\n                    $current_input = $(value);\n                    if ($current_input.val()) {\n                        $current_input.closest('.bt-flabels__wrapper').addClass('bt-flabel__float');\n                    }\n                });\n            }\n            setTimeout(function () {\n                if ($input.val()) {\n                    $input.closest('.bt-flabels__wrapper').addClass('bt-flabel__float');\n                } else {\n                    $input.closest('.bt-flabels__wrapper').removeClass('bt-flabel__float');\n                }\n            }, 1);\n        };\n        $('.bt-flabels__wrapper input, .bt-flabels__wrapper textarea').keydown(floatingLabel);\n        $('.bt-flabels__wrapper input, .bt-flabels__wrapper textarea').change(floatingLabel);\n        window.addEventListener('load', floatingLabel(true), false);\n        $('.js-flabels').parsley().on('form:error', function () {\n            $.each(this.fields, function (key, field) {\n                if (field.validationResult !== true) {\n                    field.$element.closest('.bt-flabels__wrapper').addClass('bt-flabels__error');\n                }\n            });\n        });\n        $('.js-flabels').parsley().on('field:validated', function () {\n            if (this.validationResult === true) {\n                this.$element.closest('.bt-flabels__wrapper').removeClass('bt-flabels__error');\n            } else {\n                this.$element.closest('.bt-flabels__wrapper').addClass('bt-flabels__error');\n            }\n        });\n    }(jQuery));\n}.call(this));\n\n// Check if form has been submitted\nvar params = parseURLParams(window.location.search);\n\n// console.log(params);\n\nif(params !== undefined && params.name !== undefined) {\n    $(\".js-form-confirmation\").text(\"Thanks \" + capitalizeFirstLetter(params.name[0]) + \"! I received your message.\");\n    console.log(\"Form filled out by \" + params.name[0]);\n}\n\nfunction parseURLParams(url) {\n    var queryStart = url.indexOf(\"?\") + 1,\n        queryEnd   = url.indexOf(\"#\") + 1 || url.length + 1,\n        query = url.slice(queryStart, queryEnd - 1),\n        pairs = query.replace(/\\+/g, \" \").split(\"&\"),\n        parms = {}, i, n, v, nv;\n\n    if (query === url || query === \"\") {\n        return;\n    }\n\n    for (i = 0; i < pairs.length; i++) {\n        nv = pairs[i].split(\"=\");\n        n = decodeURIComponent(nv[0]);\n        v = decodeURIComponent(nv[1]);\n\n        if (!parms.hasOwnProperty(n)) {\n            parms[n] = [];\n        }\n\n        parms[n].push(nv.length === 2 ? v : null);\n    }\n    return parms;\n}\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n"]}