{"version":3,"sources":["typewriter.js"],"names":["shuffle","a","j","x","i","length","Math","floor","random","$","document","ready","$hero","$stringElement","$cursor","after","hide","strings","$strings","children","each","key","value","push","html","shuffledStrings","shift","concat","console","log","typewriteString","curString","curStrPos","callback","removeClass","curChar","substr","charAt","tag","endTag","randomDelay","round","setTimeout","addClass","backspaceString","counter","printNextString","oldCounter","on"],"mappings":"AA+JA,QAASA,SAAQC,GACb,GAAIC,GAAGC,EAAGC,CACV,KAAKA,EAAIH,EAAEI,OAAQD,EAAGA,IAClBF,EAAII,KAAKC,MAAMD,KAAKE,SAAWJ,GAC/BD,EAAIF,EAAEG,EAAI,GACVH,EAAEG,EAAI,GAAKH,EAAEC,GACbD,EAAEC,GAAKC,EArKfM,EAAEC,UAAUC,MAAM,WACd,GAAIC,GAAQH,EAAE,YACVI,EAAiBJ,EAAE,qBACnBK,EAAUL,EAAE,yCAIhBG,GAAMG,MAAMD,GAGZD,EAAeG,MAEf,IAqBIC,GArBa,WAEb,GAAIC,GAAWL,EAAeM,WAC1BF,IACJR,GAAEW,KAAKF,EAAU,SAASG,EAAKC,GAC3BL,EAAQM,KAAKd,EAAEa,GAAOE,SAI1B,IAAIC,IAAmBR,EAAQ,GAS/B,OANAA,GAAQS,QAGR1B,QAAQiB,GAGDQ,EAAgBE,OAAOV,KAKlCW,SAAQC,IAAIZ,EAEZ,IAAIa,GAAkB,SAASC,EAAWC,EAAWC,GAEhC,IAAdD,GACClB,EAAQoB,YApCY,8BAwCxB,IAAIC,GAAUJ,EAAUK,OAAOJ,GAAWK,OAAO,EACjD,IAAgB,MAAZF,GAA+B,MAAZA,EAAiB,CACpC,GAAIG,GAAM,GACNC,EAAS,EAOb,KALIA,EADY,MAAZJ,EACS,IAGA,IAENJ,EAAUK,OAAOJ,EAAY,GAAGK,OAAO,KAAOE,IACjDD,GAAOP,EAAUK,OAAOJ,GAAWK,OAAO,OAC1CL,EACgB,EAAID,EAAU1B,WAElC2B,IACAM,GAAOC,EAGX,GAAIC,GAAclC,KAAKmC,MAAM,GAAqB,GAAhBnC,KAAKE,SAGvCkC,YAAW,WACHV,IAAcD,EAAU1B,QAExBS,EAAQ6B,SAjEQ,+BAoEM,kBAAZV,IACNA,MAIJD,IAEApB,EAAMY,KAAKO,EAAUK,OAAO,EAAEJ,IAG9BF,EAAgBC,EAAWC,EAAWC,KAG3CO,IAGHI,EAAkB,SAASb,EAAWC,EAAWC,GAOjD,GALGD,IAAcD,EAAU1B,QACvBS,EAAQoB,YAvFY,+BA2FsB,MAA1CH,EAAUK,OAAOJ,GAAWK,OAAO,GAAY,CAE/C,IADA,GAAIC,GAAM,GAC2C,MAA9CP,EAAUK,OAAOJ,EAAY,GAAGK,OAAO,KAC1CC,GAAOP,EAAUK,OAAOJ,GAAWK,OAAO,OAC1CL,EACgB,MAEpBA,IACAM,GAAO,IAGX,GAAIE,GAAclC,KAAKmC,MAAM,GAAqB,GAAhBnC,KAAKE,SAGvCkC,YAAW,WACW,IAAdV,GAEAlB,EAAQ6B,SA5GQ,+BA+GM,kBAAZV,IACNA,MAIJD,IACApB,EAAMY,KAAKO,EAAUK,OAAO,EAAEJ,IAG9BY,EAAgBb,EAAWC,EAAWC,KAG3CO,IAGHK,EAAU,EACVC,EAAkB,WAClB,GAAIC,GAAaF,CACjBA,IAAWA,EAAU,GAAK5B,EAAQZ,OAGlCuC,EAAgB3B,EAAQ8B,GAAa9B,EAAQ8B,GAAY1C,OAAQ,WAC7DyB,EAAgBb,EAAQ4B,GAAU,KAQ1Cf,GAAgBb,EAAQ,GAAI,EAAG,WAC3BR,EAAE,cAAckC,SAAS,wBAG7BlC,EAAE,cAAcuC,GAAG,QAAS,WACxBF","file":"typewriter.min.js","sourcesContent":["$(document).ready(function() {\n    var $hero = $('#js-hero');\n    var $stringElement = $('#js-typed-strings');\n    var $cursor = $(\"<span class=\\\"js-typed-cursor\\\">|</span>\");\n    var cursorStationaryClass = 'js-typed-cursor--stationary';\n\n    // Print the cursor to the DOM\n    $hero.after($cursor);\n\n    // Hide stringElement\n    $stringElement.hide();\n\n    var getStrings = function() {\n        // Build a strings variable containing all strings to be shown\n        var $strings = $stringElement.children();\n        var strings = [];\n        $.each($strings, function(key, value){\n            strings.push($(value).html());\n        });\n\n        // Shuffle the strings, *except* the first\n        var shuffledStrings = [strings[0]];\n\n        // Remove the first element...\n        strings.shift();\n\n        // Shuffle things up a bit...\n        shuffle(strings);\n\n        // And return the concatenation of both arrays\n        return shuffledStrings.concat(strings);\n    }\n\n    var strings = getStrings();\n\n    console.log(strings);\n\n    var typewriteString = function(curString, curStrPos, callback) {\n        // Remove stationary class from cursor\n        if(curStrPos === 0) {\n            $cursor.removeClass(cursorStationaryClass);\n        }\n\n        // skip over html tags while typing\n        var curChar = curString.substr(curStrPos).charAt(0)\n        if (curChar === '<' || curChar === '&') {\n            var tag = '';\n            var endTag = '';\n            if (curChar === '<') {\n                endTag = '>'\n            }\n            else {\n                endTag = ';'\n            }\n            while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n                tag += curString.substr(curStrPos).charAt(0);\n                curStrPos++;\n                if (curStrPos + 1 > curString.length) { break; }\n            }\n            curStrPos++;\n            tag += endTag;\n        }\n\n        var randomDelay = Math.round(15 + Math.random() * 75)\n\n        // timeout for any pause after a character\n        setTimeout(function() {\n            if (curStrPos === curString.length) {\n                // When we are finished typing, add/remove class to cursor\n                $cursor.addClass(cursorStationaryClass);\n\n                // And execute the callback\n                if(typeof callback == 'function') {\n                    callback();\n                }\n            } else {\n                // add characters one by one\n                curStrPos++;\n\n                $hero.html(curString.substr(0,curStrPos));\n\n                // loop the function\n                typewriteString(curString, curStrPos, callback);\n            }\n            // end of character pause\n        }, randomDelay);\n    }\n\n    var backspaceString = function(curString, curStrPos, callback) {\n        // Remove stationary class from cursor\n        if(curStrPos === curString.length) {\n            $cursor.removeClass(cursorStationaryClass);\n        }\n\n        // skip over html tags while backspacing\n        if (curString.substr(curStrPos).charAt(0) === '>') {\n            var tag = '';\n            while (curString.substr(curStrPos - 1).charAt(0) !== '<') {\n                tag -= curString.substr(curStrPos).charAt(0);\n                curStrPos--;\n                if (curStrPos < 0) { break; }\n            }\n            curStrPos--;\n            tag += '<';\n        }\n\n        var randomDelay = Math.round(15 + Math.random() * 25)\n\n        // timeout for any pause after a character\n        setTimeout(function() {\n            if (curStrPos === 0) {\n                // When we are finished backspacing, add/remove class to cursor\n                $cursor.addClass(cursorStationaryClass);\n\n                // And execute the callback\n                if(typeof callback == 'function') {\n                    callback();\n                }\n            } else {\n                // remove characters one by one\n                curStrPos--;\n                $hero.html(curString.substr(0,curStrPos));\n\n                // loop the function\n                backspaceString(curString, curStrPos, callback);\n            }\n            // end of character pause\n        }, randomDelay);\n    }\n\n    var counter = 0;\n    var printNextString = function() {\n        var oldCounter = counter;\n        counter = (counter + 1) % strings.length;\n\n        // Remove the string currently visible\n        backspaceString(strings[oldCounter], strings[oldCounter].length, function() {\n            typewriteString(strings[counter], 0);\n        });\n\n        // Print the next string\n        // typewriteString(strings[counter], 0);\n    }\n\n    // Print the first string\n    typewriteString(strings[0], 0, function() {\n        $(\".js-retype\").addClass(\"js-retype--visible\");\n    });\n\n    $(\".js-retype\").on(\"click\", function() {\n        printNextString();\n    });\n\n});\n\n/**\n * Shuffles array in place.\n * @param {Array} a items The array containing the items.\n */\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length; i; i--) {\n        j = Math.floor(Math.random() * i);\n        x = a[i - 1];\n        a[i - 1] = a[j];\n        a[j] = x;\n    }\n}\n"]}